@{
    ViewData["Title"] = "Flights";
}
@using Microsoft.AspNetCore.Identity
@model FlightManager.Models.Flights.FlightsIndexViewModel
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


<div class="jumbotron">
    @if (SignInManager.IsSignedIn(User))
    {
        <a asp-route="createFlight" class="btn btn-primary btn-lg btn-block">Create Flight</a>
    }
    <table class="table">
        <thead>
            <tr>
                <th scope="col">From</th>
                <th scope="col">To</th>
                <th scope="col">Take off Time</th>
                <th scope="col">Landing Time</th>
                <th scope="col">Seats</th>
                <th scope="col">Options</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Items.Length; i++)
            {
                <tr>
                    <td>@Html.DisplayFor(model => model.Items[i].LocationFrom)</td>
                    <td>@Html.DisplayFor(model => model.Items[i].LocationTo)</td>
                    <td>@Html.DisplayFor(model => model.Items[i].Going)</td>
                    <td>@Html.DisplayFor(model => model.Items[i].Return)</td>
                    <td>
                        @{
                            var capacity = Model.Items[i].CapacityOfBusinessClass + Model.Items[i].CapacityOfStandartClass;
                            var count = Model.Items[i].CountOfBusinessClass + Model.Items[i].CountOfStandartClass;
                        }
                        @count/@capacity
                    </td>
                    <td>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            var flightParameter = new Dictionary<string, string>
                                    {
                                {"id", Model.Items[i].Id.ToString()},
                            };

                            <a asp-route="editFlightView" asp-all-route-data="flightParameter" class="btn btn-primary">
                                Edit
                            </a>
                            <a asp-route="deleteFlight" asp-all-route-data="flightParameter" class="btn btn-danger">
                                Delete
                            </a>
                        }
                        else
                        {
                            var reservationParameters = new Dictionary<string, string>
                                    {
                                {"id", Model.Items[i].Id.ToString()},
                                {"from", Model.Items[i].LocationFrom},
                                {"to", Model.Items[i].LocationTo},
                                {"takeofftime", Model.Items[i].Going.ToString()},
                                {"landingtime", Model.Items[i].Return.ToString()},
                                {"bcapacity", Model.Items[i].CapacityOfBusinessClass.ToString()},
                                {"bcount", Model.Items[i].CountOfBusinessClass.ToString()},
                                {"scapacity", Model.Items[i].CapacityOfStandartClass.ToString()},
                                {"scount", Model.Items[i].CountOfStandartClass.ToString()},
                            };
                            if (count < capacity)
                            {
                                <a asp-route="createReservation" asp-all-route-data="reservationParameters" class="btn btn-primary">Reserve</a>
                            }
                            else
                            {
                                <button type="button" class="btn btn-lg btn-primary" disabled>Reserve</button>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.Items.Length == 0)
    {
        <p class="text-center">No Flights are avaliable</p>
    }
</div>


